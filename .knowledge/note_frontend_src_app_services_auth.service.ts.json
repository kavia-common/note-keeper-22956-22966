{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service called AuthService that handles authentication-related operations such as login, signup, logout, token management, and providing authentication state as an observable.", "external_files": ["../models", "../../environments/environment", "@angular/core", "@angular/common/http", "rxjs"], "external_methods": ["rxjs/BehaviorSubject", "rxjs/Observable", "rxjs/tap", "inject", "localStorage.getItem", "localStorage.setItem", "localStorage.removeItem"], "published": ["AuthService"], "classes": [{"name": "AuthService", "description": "An Angular service that manages user authentication, token storage, and authentication state."}], "methods": [{"name": "isAuthenticated$", "description": "Returns an observable boolean indicating whether the user is authenticated."}, {"name": "getToken", "description": "Retrieves the stored JWT token from local storage."}, {"name": "getUserEmail", "description": "Retrieves the stored user email from local storage."}, {"name": "signup", "description": "Performs user signup by sending credentials to the API and storing the received token."}, {"name": "login", "description": "Performs user login by sending credentials to the API and storing the received token."}, {"name": "logout", "description": "Clears stored token and user email, and updates authentication state to false."}, {"name": "authHeaders", "description": "Returns HTTP headers with Authorization token if available."}, {"name": "storeSession", "description": "Stores token and email in local storage and updates auth state."}, {"name": "hasToken", "description": "Checks if a token exists in local storage."}], "calls": ["@angular/core/inject", "@angular/common/http/post", "rxjs/Observable/pipe", "rxjs/Observable/tap", "localStorage/getItem", "localStorage/setItem", "localStorage/removeItem"], "search-terms": ["Angular AuthService", "local storage token", "RxJS BehaviorSubject", "HTTP headers authorization", "environment.apiBaseUrl"], "state": 2, "file_id": 23, "knowledge_revision": 47, "git_revision": "", "ctags": [{"_type": "tag", "name": "AuthService", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22966/note_frontend/src/app/services/auth.service.ts", "pattern": "/^export class AuthService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "TOKEN_KEY", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22966/note_frontend/src/app/services/auth.service.ts", "pattern": "/^const TOKEN_KEY = 'nk_token';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "USER_EMAIL_KEY", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22966/note_frontend/src/app/services/auth.service.ts", "pattern": "/^const USER_EMAIL_KEY = 'nk_user_email';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22966/note_frontend/src/app/services/auth.service.ts", "pattern": "/^    let headers = new HttpHeaders({ 'Content-Type': 'application\\/json' });$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22966/note_frontend/src/app/services/auth.service.ts", "pattern": "/^  private http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22966/note_frontend/src/app/services/auth.service.ts", "pattern": "/^    const token = this.getToken();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22966/note_frontend/src/app/services/auth.service.ts", "pattern": "/^    const url = `${environment.apiBaseUrl}\\/auth\\/login`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/note-keeper-22956-22966/note_frontend/src/app/services/auth.service.ts", "pattern": "/^    const url = `${environment.apiBaseUrl}\\/auth\\/signup`;$/", "language": "TypeScript", "kind": "constant"}], "hash": "7c79a859a1bfcc19c347682ef6eb00e1", "format-version": 4, "code-base-name": "note_frontend", "filename": "note_frontend/src/app/services/auth.service.ts", "fields": [{"name": "let headers = new HttpHeaders({ 'Content-Type': 'application\\/json' });", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "private http = inject(HttpClient);", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"47": ""}]}